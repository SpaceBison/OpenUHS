import org.apache.tools.ant.filters.FixCrLfFilter

apply plugin: "java"


compileJava.options.encoding = "Windows-1252"  // Someday "UTF-8"?
compileJava.options.compilerArgs.addAll(["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:cast"])
sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6


jar {
	baseName = "openuhs"
	appendix = project.name
}

task generateJavadocs(type: Javadoc) {
	source = sourceSets.main.allJava
}

task packageDist(type: Zip) {
	baseName = "OpenUHS"
	appendix = "Core"

	includeEmptyDirs = true
	filteringCharset = "UTF-8"

	from(["skel/common"]) {
		eachFile {
			if (it.getName() ==~ /(?i).*[.](bat|txt)$/) {
				it.filter(FixCrLfFilter,
					eol: FixCrLfFilter.CrLf.newInstance("crlf"),
					tab: FixCrLfFilter.AddAsisRemove.newInstance("asis"),
					eof: FixCrLfFilter.AddAsisRemove.newInstance("asis"),
					fixlast: true)
			}
		}
		// Into the root of the archive.
	}

	from(jar)
	from(generateJavadocs) {
		into("javadoc")
	}

	// Copy the licenseFile, an attribute declared on allprojects from the root project.
	from(licenseFile) {
		rename(licenseFile.getName(), "license.txt")

		filter(FixCrLfFilter,
			eol: FixCrLfFilter.CrLf.newInstance("crlf"),
			tab: FixCrLfFilter.AddAsisRemove.newInstance("asis"),
			eof: FixCrLfFilter.AddAsisRemove.newInstance("asis"),
			fixlast: true)

		// Into the root of the archive.
	}
}

configurations {
	dists
}

artifacts {
	dists packageDist
}
